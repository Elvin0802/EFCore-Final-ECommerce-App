<Page x:Class="ECommerceApp.Views.Pages.AllProductsPageView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ECommerceApp.Views.Pages"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:additional="clr-namespace:ECommerceApp.Models.Additional"
      
      mc:Ignorable="d" 
      
      Height="auto" 
      Width="auto"
      x:Name="AllProductsPage">

    <Page.Resources>

        <!-- Define brushes for different rating values -->
        <SolidColorBrush x:Key="RatingColorLow" Color="Red"/>
        <SolidColorBrush x:Key="RatingColorHigh" Color="Green"/>

        <!-- Style for RatingBar with dynamic color -->
        <Style TargetType="materialDesign:RatingBar">
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Value" Value="0"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Value, RelativeSource={RelativeSource Self}}" Value="1">
                    <Setter Property="Foreground" Value="{StaticResource RatingColorLow}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Value, RelativeSource={RelativeSource Self}}" Value="5">
                    <Setter Property="Foreground" Value="{StaticResource RatingColorHigh}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Modern Button Style -->
        <Style TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource #FF6200EE}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="{DynamicResource #FF6200EE}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                             BorderBrush="{TemplateBinding BorderBrush}"
                             BorderThickness="{TemplateBinding BorderThickness}"
                             CornerRadius="8">
                            <ContentPresenter HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Content="{TemplateBinding Content}"
                                           ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern ComboBox Style -->
        <Style TargetType="ComboBox">
            <Setter Property="Background" Value="{DynamicResource #FFF5F5F5}"/>
            <Setter Property="Foreground" Value="{DynamicResource #FF333333}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource #FFCCCCCC}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Padding" Value="10"/>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern Slider Style -->
        <Style TargetType="Slider">
            <Setter Property="Background" Value="{DynamicResource #FFF5F5F5}"/>
            <Setter Property="Foreground" Value="{DynamicResource #FF6200EE}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Slider">
                        <Grid Background="{TemplateBinding Background}">
                            <Track x:Name="PART_Track"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Stretch">
                                <Track.Thumb>
                                    <Thumb Background="{DynamicResource #FF6200EE}"
                                Width="20"
                                Height="20"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Modern TextBlock Style -->
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource #FF333333}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="60"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Filter Panel -->
        <StackPanel Orientation="Horizontal" Grid.Row="0" Background="{DynamicResource #FF6200EE}" Margin="10">
            <TextBlock Text="Sort By:" VerticalAlignment="Center" Foreground="White" Margin="5"/>
            <ComboBox SelectedIndex="{Binding SortIndex, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="180">
                <ComboBoxItem Content="Name Increasing"/>
                <ComboBoxItem Content="Price Increasing"/>
                <ComboBoxItem Content="Name Decreasing"/>
                <ComboBoxItem Content="Price Decreasing"/>
            </ComboBox>

            <TextBlock Text="{Binding Fv, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="60" TextAlignment="Center"/>
            <Slider Maximum="{Binding Max, UpdateSourceTrigger=PropertyChanged}" Minimum="{Binding Min, UpdateSourceTrigger=PropertyChanged}" 
                 Value="{Binding Fv, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                 Width="120"/>

            <Slider Maximum="{Binding Max, UpdateSourceTrigger=PropertyChanged}" Minimum="{Binding Min, UpdateSourceTrigger=PropertyChanged}" 
                 Value="{Binding Sv, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                 Width="120"/>
            <TextBlock Text="{Binding Sv, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    Width="60" 
                    TextAlignment="Center"/>

            <TextBox x:Name="CategorieNameTB"
                  Margin="10 0 0 0"
                  Width="250"
                  Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                  Padding="3"
                  additional:TextBoxPlaceholderBehavior.PlaceholderText="Search..."/>

        </StackPanel>

        <StackPanel Grid.Row="1"
                    VerticalAlignment="Center"
                    Orientation="Horizontal"
                    >

            <Button x:Name="AddProductBtn"
                    Content="Add New Product"
                    Margin="65 5"
                    Background="Beige"
                    Foreground="DarkGreen"
                    Width="170"
                    Height="30"
                    Command="{Binding AddNewProductCommand}"/>
            
            <Button 
                    Content="Back"
                    Margin="20 5"
                    Background="Beige"
                    Foreground="DarkGreen"
                    Width="170"
                    Height="30"
                    Command="{Binding BackCommand}"
                CommandParameter="{Binding ElementName=AllProductsPage}"/>
            

        </StackPanel>


        <!-- Products List View -->
        <ListView x:Name="ProductsView" 
               Grid.Row="2"
               ItemsSource="{Binding Ps, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
               Background="White"
               BorderBrush="{DynamicResource #FFDDDDDD}" 
               BorderThickness="1">

            <ListView.View>
                <GridView>
                    <GridViewColumn Width="120" Header="Picture">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Image Source="{Binding MainImage, UpdateSourceTrigger=PropertyChanged}"
                                    Width="60" 
                                    Height="60">
                                    <Image.ToolTip>
                                        <ToolTip>
                                            <Image Source="{Binding MainImage, UpdateSourceTrigger=PropertyChanged}" 
                                                Width="600" 
                                                Height="600"/>
                                        </ToolTip>
                                    </Image.ToolTip>
                                </Image>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Width="180" Header="Name" DisplayMemberBinding="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
                    <GridViewColumn Width="180" Header="Price" DisplayMemberBinding="{Binding Price, UpdateSourceTrigger=PropertyChanged}"/>
                    <GridViewColumn Width="180" Header="Category" DisplayMemberBinding="{Binding Category, UpdateSourceTrigger=PropertyChanged}"/>

                    <GridViewColumn Width="150" Header="Rating">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <materialDesign:RatingBar Value="{Binding RatingAvg}" 
                                                       HorizontalAlignment="Left" 
                                                       VerticalAlignment="Center"
                                                       Width="140" 
                                                       Height="26" 
                                                       IsReadOnly="True"
                                                       Foreground="{DynamicResource ResourceKey = ThemeF}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Width="200" Header="Actions">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Button Command="{Binding DataContext.AddCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}" Content="Edit"
                                         Foreground="{DynamicResource MaterialDesign.Brush.Primary.Light.Foreground}"/>
                                    <Button Command="{Binding DataContext.ShowCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding}" Content="Show Details"
                                         Foreground="{DynamicResource MaterialDesign.Brush.Primary.Light.Foreground}"/>
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</Page>
